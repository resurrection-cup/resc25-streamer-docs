import{_ as t,c as o,o as r,ae as a}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"Stream Procedure","description":"","frontmatter":{},"headers":[],"relativePath":"stream_procedure.md","filePath":"stream_procedure.md"}'),n={name:"stream_procedure.md"};function i(l,e,s,c,d,h){return r(),o("div",null,e[0]||(e[0]=[a('<h1 id="stream-procedure" tabindex="-1">Stream Procedure <a class="header-anchor" href="#stream-procedure" aria-label="Permalink to &quot;Stream Procedure&quot;">​</a></h1><p>Since we have many animations and different scenes, please pay attention to the order of running the stream.</p><h2 id="app-opening-sequence" tabindex="-1">App opening sequence <a class="header-anchor" href="#app-opening-sequence" aria-label="Permalink to &quot;App opening sequence&quot;">​</a></h2><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>Always follow this exact sequence to open apps before starting the stream, because one wrong order and you will need to do a lot of source refresh</p></div><ol><li>osu! client</li><li>tosu</li><li>Overlay Controller</li><li>OBS</li></ol><h2 id="operating-the-overlay-controller" tabindex="-1">Operating the Overlay Controller <a class="header-anchor" href="#operating-the-overlay-controller" aria-label="Permalink to &quot;Operating the Overlay Controller&quot;">​</a></h2><ul><li>Left click on slot: Active slot</li><li>Right click on slot: Remove picked/banned map</li><li>Reset button: basically Panic button but for overlay</li><li>Stream Title &amp; Stream Ping: your classic copy pasta</li><li>Dropdowns: Choose winner for the pick (or change to Pick to remove winner)</li></ul><h2 id="general-stream-running-procedure" tabindex="-1">General stream running procedure <a class="header-anchor" href="#general-stream-running-procedure" aria-label="Permalink to &quot;General stream running procedure&quot;">​</a></h2><ul><li>Before stream starts, in Overlay Controller: <ul><li>Turn <strong>ON</strong> <code>Beatmap Details</code> on top right</li><li>Choose correct Stage</li><li>Choose Match ID to stream</li><li>Change Stream Title and ready for Stream Ping</li></ul></li><li>5 minutes before match starts, ping stream in the correct channel with correct role</li><li>On stream start, stays on the <code>STARTING - Match</code> scene until countdown reaches 0, then transition to <code>INTERMISSION</code> for casters to do the intro. This can be flexible depends on what the casters are talking about.</li><li>Upon going to ban phase (you should be monitoring in-game chat during the stream), transition from <code>INTERMISSION</code> to <code>Mappool</code><ul><li>Before transitioning, in Overlay Controller, select First Ban slot</li></ul></li><li>Select banned maps in order (wait for the transition to finish for each slots)</li><li>Go to first pick slot, then click on the slot and choose picked map (there will be map stats animation so make sure to time this right)</li><li>Stay on Mappool scene until first client finishes loading the map (using Studio Mode in OBS to monitor both Gameplay and Mappool scenes)</li><li>Repeat this process until match finishes</li><li>Upon having a match winner, go to the <strong>corresponding winner scene</strong> (Red or Blue)</li><li>If you are streaming back-to-back matches, go back to <code>INTERMISSION</code> for the casters to do the closing words first, then go to <code>STARTING - Match</code> scene for countdown. Else, go to <code>Ending</code> scene and end the stream</li></ul>',9)]))}const m=t(n,[["render",i]]);export{u as __pageData,m as default};
